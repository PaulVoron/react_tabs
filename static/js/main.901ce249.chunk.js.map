{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","getTabById","id","find","tab","activeTab","className","map","href","onClick","title","content","getTabTitleById","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAa,SAACC,GAClB,OAAOJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIF,KAAOA,MAGjCG,EAAYN,EAMhB,OAJKE,EAAWF,KACdM,EAAYP,EAAK,GAAGI,IAIpB,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWF,EAAIF,KAAOG,EAAY,YAAc,GAChD,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMJ,EAAIF,IACd,UAAQ,UACRO,QAAS,WACP,OAAIL,EAAIF,KAAOG,EACNL,EAAcI,GAGhB,IARX,SAWGA,EAAIM,SAbFN,EAAIF,WAoBjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,mBACGL,EAAWI,UADd,aACG,EAAuBM,cC7CnBb,EAAO,CAClB,CAAEI,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAGpCC,EAAkB,SAACV,GAAgB,IAAD,EACtC,iBAAOJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIF,KAAOA,YAAnC,aAAO,EAAiCQ,OAG7BG,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGI,IAA3D,mBAAOH,EAAP,KAAsBgB,EAAtB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBM,EAAgBb,MAEtC,cAAC,EAAD,CACED,KAAMA,EACNC,cAAeA,EACfC,cAZY,SAACI,GACjBW,EAAiBX,EAAIF,WClBzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.901ce249.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: any,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const getTabById = (id: string) => {\n    return tabs.find(tab => tab.id === id);\n  };\n\n  let activeTab = selectedTabId;\n\n  if (!getTabById(selectedTabId)) {\n    activeTab = tabs[0].id;\n  }\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={tab.id === activeTab ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== activeTab) {\n                    return onTabSelected(tab);\n                  }\n\n                  return '';\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {getTabById(activeTab)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst getTabTitleById = (id: string) => {\n  return tabs.find(tab => tab.id === id)?.title;\n};\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getTabTitleById(selectedTabId)}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={selectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}